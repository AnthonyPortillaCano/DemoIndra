{"code":"__filename=\"C:\\\\DemoIndra\\\\backend\\\\src\\\\services\\\\appointment.service.ts\";(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __hasOwnProp=Object.prototype.hasOwnProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:true})};var __copyProps=(to,from,except,desc)=>{if(from&&typeof from===\"object\"||typeof from===\"function\"){for(let key of __getOwnPropNames(from))if(!__hasOwnProp.call(to,key)&&key!==except)__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable})}return to};var __toCommonJS=mod=>__copyProps(__defProp({},\"__esModule\",{value:true}),mod);var appointment_service_exports={};__export(appointment_service_exports,{AppointmentService:()=>AppointmentService});module.exports=__toCommonJS(appointment_service_exports);var import_aws_sdk=require(\"aws-sdk\");var import_uuid=require(\"uuid\");var import_aws=require(\"./aws.integration\");const dynamoDb=new import_aws_sdk.DynamoDB.DocumentClient;const tableName=process.env.DYNAMODB_TABLE||\"Appointments\";const awsIntegration=new import_aws.AWSIntegrationService;class AppointmentService{static{__name(this,\"AppointmentService\")}async createAppointment(event){const body=JSON.parse(event.body);const item={insuredId:body.insuredId,scheduleId:body.scheduleId,countryISO:body.countryISO,status:\"pending\",createdAt:new Date().toISOString(),appointmentId:(0,import_uuid.v4)()};if(process.env.IS_OFFLINE){return{statusCode:202,body:JSON.stringify({message:\"Agendamiento en proceso (local)\",appointmentId:item.appointmentId})}}await dynamoDb.put({TableName:tableName,Item:item}).promise();await awsIntegration.publishToSNS(body.countryISO,item);return{statusCode:202,body:JSON.stringify({message:\"Agendamiento en proceso\",appointmentId:item.appointmentId})}}async listAppointments(event){const insuredId=event.pathParameters?.insuredId;if(process.env.IS_OFFLINE){return{statusCode:200,body:JSON.stringify([{insuredId,scheduleId:100,countryISO:\"PE\",status:\"pending\",createdAt:new Date().toISOString(),appointmentId:\"local-id\"}])}}const params={TableName:tableName,KeyConditionExpression:\"insuredId = :insuredId\",ExpressionAttributeValues:{\":insuredId\":insuredId}};const result=await dynamoDb.query(params).promise();return{statusCode:200,body:JSON.stringify(result.Items)}}}0&&(module.exports={AppointmentService});\n})()\n","warnings":[],"map":{"version":3,"mappings":";mvBAAA,iMAAyB,mBACzB,gBAA6B,gBAC7B,eAAsC,6BAEtC,MAAM,SAAW,IAAI,wBAAS,eAC9B,MAAM,UAAY,QAAQ,IAAI,gBAAkB,eAChD,MAAM,eAAiB,IAAI,iCAEpB,MAAM,kBAAmB,CARhC,MAQgC,mCAC9B,MAAM,kBAAkB,MAAY,CAClC,MAAM,KAAO,KAAK,MAAM,MAAM,IAAI,EAElC,MAAM,KAAO,CACX,UAAW,KAAK,UAChB,WAAY,KAAK,WACjB,WAAY,KAAK,WACjB,OAAQ,UACR,UAAW,IAAI,KAAK,EAAE,YAAY,EAClC,iBAAe,YAAAA,IAAO,CACxB,EACA,GAAI,QAAQ,IAAI,WAAY,CAE1B,MAAO,CACL,WAAY,IACZ,KAAM,KAAK,UAAU,CAAE,QAAS,kCAAmC,cAAe,KAAK,aAAc,CAAC,CACxG,CACF,CACA,MAAM,SAAS,IAAI,CAAE,UAAW,UAAW,KAAM,IAAK,CAAC,EAAE,QAAQ,EAEjE,MAAM,eAAe,aAAa,KAAK,WAAY,IAAI,EACvD,MAAO,CACL,WAAY,IACZ,KAAM,KAAK,UAAU,CAAE,QAAS,0BAA2B,cAAe,KAAK,aAAc,CAAC,CAChG,CACF,CAEA,MAAM,iBAAiB,MAAY,CACjC,MAAM,UAAY,MAAM,gBAAgB,UACxC,GAAI,QAAQ,IAAI,WAAY,CAE1B,MAAO,CACL,WAAY,IACZ,KAAM,KAAK,UAAU,CACnB,CACE,UACA,WAAY,IACZ,WAAY,KACZ,OAAQ,UACR,UAAW,IAAI,KAAK,EAAE,YAAY,EAClC,cAAe,UACjB,CACF,CAAC,CACH,CACF,CACA,MAAM,OAAS,CACb,UAAW,UACX,uBAAwB,yBACxB,0BAA2B,CACzB,aAAc,SAChB,CACF,EACA,MAAM,OAAS,MAAM,SAAS,MAAM,MAAM,EAAE,QAAQ,EACpD,MAAO,CACL,WAAY,IACZ,KAAM,KAAK,UAAU,OAAO,KAAK,CACnC,CACF,CACF","names":["uuidv4"],"ignoreList":[],"sources":["C:\\DemoIndra\\backend\\src\\services\\appointment.service.ts"],"sourcesContent":[null]}}